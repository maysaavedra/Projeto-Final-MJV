package com.mjv.projetofinal.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.view.RedirectView;

import com.mjv.projetofinal.model.User;
import com.mjv.projetofinal.repository.UserRepository;
import com.mjv.projetofinal.util.FileUploadUtil;


@RestController
@RequestMapping("/User")
public class UserController {
	
	
	@Autowired
	private UserRepository repository;
	
	@GetMapping
	public List<User> listarCadastros(){
		return repository.findAll();
	}
	
	
	@PostMapping("/users/save")
    public RedirectView saveUser(@RequestBody User user,
            @RequestParam("image") MultipartFile multipartFile) throws IOException {
         
        String fileName = StringUtils.cleanPath(multipartFile.getOriginalFilename());
        user.setPhotos(fileName);
         
        User savedUser = repository.save(user);
 
        String uploadDir = "user-photos/" + savedUser.getId();
 
        FileUploadUtil.saveFile(uploadDir, fileName, multipartFile);
         
        return new RedirectView("/user", true);
      
    }

	@DeleteMapping(path = "/{id}")
	public void alterar(@PathVariable("id") Integer id){//pegadinha
		repository.deleteById(id);
	}
}
